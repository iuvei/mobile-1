//
//var __assign = (this && this.__assign) || Object.assign || function(t) {
//  for (var s, i = 1, n = arguments.length; i < n; i++) {
//      s = arguments[i];
//      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
//          t[p] = s[p];
//  }
//  return t;
//};
//define(["require", "exports", "./calcChaseList", "moment", "../../services/enum", "../interface", "../../services/fetchInfo"], function (require, exports, calcChaseList_1, moment_1, enum_1, interface_1, fetchInfo_1) {
//  "use strict";
//  Object.defineProperty(exports, "__esModule", { value: true });
const DOUBLE_EDITION_GAME_ID='3014';const KS_SUM_GAME_ID='4001';const BJSC_DOUBLE_EDITION_GAME_ID='6005';const DEFAULT_GAMEID='cqssc';const PK10_KINDID='bjpk10';var createChaseList=function(_a){var confirmBetFields=_a.confirmBetFields,betList=_a.betList,chaseList=_a.chaseList,periodNo=_a.periodNo,gameType=_a.gameType,isFirst=_a.isFirst;var chaseAfterPercent=confirmBetFields.chaseAfterPercent,chaseBeforePercent=confirmBetFields.chaseBeforePercent,chaseBeforePeriod=confirmBetFields.chaseBeforePeriod,chaseMinNumber=confirmBetFields.chaseMinNumber,chaseMinPercent=confirmBetFields.chaseMinPercent,chasePeriods=confirmBetFields.chasePeriods,chasePrePay=confirmBetFields.chasePrePay,chaseTimes=confirmBetFields.chaseTimes,chaseWinType=confirmBetFields.chaseWinType,confirmBetType=confirmBetFields.confirmBetType;var newChaseList=[],finalChaseList=[],targetChasePeriods=chasePeriods,msg='';if(isFirst){for(var i=0;i<chasePeriods;i+=1){newChaseList.push({currentPay:0,hasPay:0,profit:'',profitRate:'',periodNo:createChasePeriod(periodNo,i,gameType),times:chaseTimes})}}else{newChaseList=chaseList.reduce(function(prev,item,index){return prev.concat([__assign({},item,{periodNo:createChasePeriod(periodNo,index,gameType),times:item.times})])},newChaseList)}if(confirmBetType===confirmBetTypeEnum.common){var hasPay_1=0;newChaseList.forEach(function(item){var times=item.times;var currentPay=0;currentPay=betList.reduce(function(prev,item){return prev+item.totalPrice*times},0);currentPay=parseFloat(currentPay.toFixed(2));hasPay_1+=currentPay;hasPay_1=parseFloat(hasPay_1.toFixed(2));var profit={profit:'--',profitRate:'--'};if(betList.length===1){profit=calcProfitByChaseTimes({chaseTimes:times,betItem:betList[0],hasPay:hasPay_1})}finalChaseList.push({currentPay:currentPay,hasPay:hasPay_1,periodNo:item.periodNo,profit:profit.profit,profitRate:profit.profitRate,times:times})})}else{console.log(chasePrePay);console.log(betList);var hasPay_2=chasePrePay;var betItem_1=betList[0];console.log(newChaseList);if(chaseWinType===1){newChaseList.forEach(function(item,index){console.log(hasPay_2);var times=0;if(isFirst){times=calcChaseTimesByProfitRate({profitRate:chaseMinPercent,hasPay:hasPay_2,betItem:betItem_1});console.log(times);times=times>=chaseTimes?times:chaseTimes}else{times=item.times}if(times!==0&&times<99999){var currentPay=betItem_1.totalPrice*times;currentPay=parseFloat(currentPay.toFixed(2));hasPay_2+=currentPay;hasPay_2=parseFloat(hasPay_2.toFixed(2));var profit=calcProfitByChaseTimes({chaseTimes:times,betItem:betItem_1,hasPay:hasPay_2});finalChaseList.push({periodNo:item.periodNo,times:times,currentPay:currentPay,hasPay:hasPay_2,profit:profit.profit,profitRate:profit.profitRate})}})}if(chaseWinType===2){newChaseList.forEach(function(item,index){var targetProfitRate;if(index<chaseBeforePeriod){targetProfitRate=chaseBeforePercent}else{targetProfitRate=chaseAfterPercent}var times=0;if(isFirst){times=calcChaseTimesByProfitRate({profitRate:targetProfitRate,hasPay:hasPay_2,betItem:betItem_1});times=times>=chaseTimes?times:chaseTimes}else{times=item.times}if(times!==0&&times<99999){var currentPay=betItem_1.totalPrice*times;currentPay=parseFloat(currentPay.toFixed(2));hasPay_2+=currentPay;hasPay_2=parseFloat(hasPay_2.toFixed(2));var profit=calcProfitByChaseTimes({chaseTimes:times,betItem:betItem_1,hasPay:hasPay_2});finalChaseList.push({currentPay:currentPay,hasPay:hasPay_2,periodNo:item.periodNo,profit:profit.profit,profitRate:profit.profitRate,times:times})}})}if(chaseWinType===3){newChaseList.forEach(function(item,index){var times=0;if(isFirst){times=calcChaseTimesByProfit({profit:chaseMinNumber,hasPay:hasPay_2,betItem:betItem_1});times=times>=chaseTimes?times:chaseTimes}else{times=item.times}if(times!==0&&times<99999){var currentPay=betItem_1.totalPrice*times;currentPay=parseFloat(currentPay.toFixed(2));hasPay_2+=currentPay;hasPay_2=parseFloat(hasPay_2.toFixed(2));var profit=calcProfitByChaseTimes({chaseTimes:times,betItem:betItem_1,hasPay:hasPay_2});finalChaseList.push({currentPay:currentPay,hasPay:hasPay_2,periodNo:item.periodNo,profit:profit.profit,profitRate:profit.profitRate,times:times})}})}}return finalChaseList};var createChasePeriod=function(period,offset,gameType){var periodNoAll=gameType.periodNoAll,kindId=gameType.kindId;if(kindId===PK10_KINDID){return parseInt(period)+offset+''}else{var digit=period.length-8;var periodTime=period.substr(0,8);var momentTime=moment(periodTime,'YYYYMMDD');var nowPeriodString=period.substr(8,digit);var nowPeriod=parseInt(period.substr(8,digit));var targetPeriod=nowPeriod+offset;var targetTime=void 0;if(targetPeriod>periodNoAll){targetPeriod-=periodNoAll;targetTime=momentTime.add(1,'d').format('YYYYMMDD')}else{targetTime=periodTime}var targetPeriodString=targetPeriod+'';return targetTime+targetPeriodString.padStart(digit,'0')}};